/** * Copyright 2011 by Barnabás Bucsy * * This file is part of The Memento Framework. * * The Memento Framework is free software: you can redistribute it * and/or modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation, either * version 3 of the License, or (at your option) any later version. * * The Memento Framework is distributed in the hope that it will be * useful, but WITHOUT ANY WARRANTY; without even the implied warranty * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with The Memento Framework. If not, see * <http://www.gnu.org/licenses/>. */package com.memento.constants.patterns{	/**	 * STATIC Class, contains HTML regarding RegExp patterns.	 * @author Barnabás Bucsy (Lobo)	 */	public class HTMLPatterns	{		/**		 * Constant for quote sign.		 */		public static const ESCAPE:String = '\\';		/**		 * Constant for quote sign.		 */		public static const QUOTE:String = '"';		/**		 * Constant for escaped quote sign.		 */		public static const ESCAPED_QUOTE:String = '\\\\?"';		/**		 * Constant for starting and ending quote sign.		 */		public static const START_END_QUOTE:String = '^"|"$';		/**		 * Constant for accent sign.		 */		public static const ACCENT:String = '\'';		/**		 * Constant for escaped accent sign.		 */		public static const ESCAPED_ACCENT:String = '\\\\?\'';		/**		 * Constant for starting and ending accent sign.		 */		public static const START_END_ACCENT:String = '^\'|\'$';		/**		 * Constant for escaped accent sign.		 */		public static const ESCAPED_ACCENT_OR_QUOTE:String = '\\\\?\'|\\\\?"';		/**		 * Constant for HTML paragraph tag.		 */		public static const PARAGRAPH:String = '</?p[^<>]*>';		/**		 * Constant for HTML anchor tag.		 */		public static const ANCHOR:String = '</?a[^<>]*>';		/**		 * Constant for HTML italic tag.		 */		public static const ITALIC:String = '</?i>';		/**		 * Constant for HTML bold tag.		 */		public static const BOLD:String = '</?b>';		/**		 * Constant for HTML underline tag.		 */		public static const UNDERLINE:String = '</?u>';		/**		 * Constant for HTML line break tag.		 */		public static const LINE_BREAK:String = '<br/?>';		/**		 * Constant for types of new lines found in HTML text.		 */		public static const NEW_LINE_TYPES:String = '(?:\\n\\r?)|(?:\\r)|(?:<br/?>)|(?:</p>)';		/**		 * Pattern for matching HTML tags.		 */		public static const HTML_TAG:String = '<[^<>]+>';		/**		 * Pattern for matching HTML tag name within match of HTML_TAG.		 */		public static const HTML_TAG_NAME:String = '(?<=[</])[^\\s/"\'>]+';		/**		 * Pattern for matching HTML attributes within match of HTML_TAG.		 */		public static const HTML_ATTRIBUTE:String = '\\s*(\\w+)=(\'|")[^\\2]+\\2';		/**		 * Pattern for matching HTML attribute name with starting whitespaces		 * within match of HTML_ATTRIBUTE.		 */		public static const HTML_ATTRIBUTE_NAME:String = '[^=]+';		/**		 * Pattern for matching HTML attribute value within match of		 * HTML_ATTRIBUTE.		 */		public static const HTML_ATTRIBUTE_VALUE:String = '\'(?:\\\\.|[^\'])+\'|"(?:\\\\.|[^"])+"';		/**		 * Constructor		 * @throws Error Static Class.		 */		public function HTMLPatterns( ):void		{			throw new Error( 'Tried to instantiate static class!' );		}	}}