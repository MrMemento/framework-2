/** * Copyright 2011 by Barnabás Bucsy * * This file is part of The Memento Framework. * * The Memento Framework is free software: you can redistribute it * and/or modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation, either * version 3 of the License, or (at your option) any later version. * * The Memento Framework is distributed in the hope that it will be * useful, but WITHOUT ANY WARRANTY; without even the implied warranty * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with The Memento Framework. If not, see * <http://www.gnu.org/licenses/>. */package com.memento.display.filters{	import flash.filters.ConvolutionFilter;	/**	 * Wrapper class for ConvolutionFilter to be used as outline filter	 * with DisplayObject or BitmapData.	 * @author Barnabás Bucsy (Lobo)	 */	public class OutlineFilter extends ConvolutionFilter	{		/**		 * Contrast amount.		 */		private var _strength:Number;		/**		 * Constructor		 * @param strength_ Number Amount of outline convolution.		 */		public function OutlineFilter( strength_:Number = 0.8 ):void		{			super( );			matrixX  = 3;			matrixY  = 3;			strength = strength_;		}		/**		 * Setter function for amount of outline convolution.		 * @param strength_ Number Amount of outline convolution.		 */		public function set strength( strength_:Number ):void		{			var q:Number = strength_ *0.25;			matrix = [				0, q,          0,				q, -strength_, q,				0, q,          0			];			_strength = strength_;		}		/**		 * @private		 * Getter function for amount of outline convolution.		 * @return The amount of outline convolution.		 */		public function get strength( ):Number		{			return _strength;		}	}}