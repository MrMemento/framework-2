/*                                                     ___                                                  ,o88888                                               ,o8888888'                         ,:o:o:oooo.        ,8O88Pd8888"                     ,.::.::o:ooooOoOoO. ,oO8O8Pd888'"                   ,.:.::o:ooOoOoOO8O8OOo.8OOPd8O8O" __________________________________________________                  , ..:.::o:ooOoOOOO8OOOOo.FdO8O8" ____________________________________________________                 , ..:.::o:ooOoOO8O888O8O,COCOO"                , . ..:.::o:ooOoOOOO8OOOOCOCO"           ->  The Memento Kernel                 . ..:.::o:ooOoOoOO8O8OCCCC"o               -----------------------------------------                    . ..:.::o:ooooOoCoCCC"o:o                ©2011                    . ..:.::o:o:,cooooCo"oo:o: ________________________________________________________                 `   . . ..:.:cocoooo"'o:o:::' ________________________________________________________                 .`   . ..::ccccoc"'o:o:o:::'                :.:.    ,c:cccc"':.:.:.:.:.'              ..:.:"'`::::c:"'..:.:.:.:.:.'            ...:.'.:.::::"'    . . . . .'           .. . ....:."' `   .  . . ''         . . . ...."'         .. . ."'        .*//** * Copyright 2011 by Barnabás Bucsy * * This file is part of The Memento Framework. * * The Memento Framework is free software: you can redistribute it * and/or modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation, either * version 3 of the License, or (at your option) any later version. * * The Memento Framework is distributed in the hope that it will be * useful, but WITHOUT ANY WARRANTY; without even the implied warranty * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with The Memento Framework. If not, see * <http://www.gnu.org/licenses/>. */package com.memento{	import flash.display.Sprite;	import com.memento.core.system.GarbageCollector;	/**	 * General skeleton class to initialize Kernel dependencies.	 * @author Barnabás Bucsy (Lobo)	 */	public class Kernel extends Sprite	{		/**		 * ID of the Kernel.		 */		private static var __kernelID:String = 'Kernel [Hunter]';		/**		 * Version of the Kernel.		 */		private static var __kernelVersion:String = 'v1.0a';		/**		 * The ID of created application. This should be set in		 * descendant's constructor before calling super(). Will		 * show up in context menu.		 */		public static var ID:String;		/**		 * The version of created application. This should be set		 * in descendant's constructor before calling super().		 * Will show up in context menu.		 */		public static var VERSION:String;		/**		 * The interval to dispose registered Classes' pools.		 * This should be set in descendant's constructor before		 * calling super().		 */		public static var DISPOSE_INTERVAL_MS:uint;		/**		 * Constructor		 * @throws Error Throws error if this is not the base class.		 */		public function Kernel( ):void		{			//-------------			// INHERITANCE			//-------------			// ensure we're root			if ( root != this )			{				throw new Error( 'Kernel was meant to be the base class!' );			}			// ensure we have an ID			if ( !ID || ID == '' )			{				trace( 'WARNING: No ID present in Kernel, will use default ID.' );				ID = __kernelID;			}			// ensure we have a version			if ( !VERSION || VERSION == '' )			{				trace( 'WARNING: No VERSION present in Kernel, will use default VERSION.' );				VERSION = __kernelVersion;			}			//-----------			// DISPOSING			//-----------			if ( DISPOSE_INTERVAL_MS > 0 )			{				GarbageCollector.start( DISPOSE_INTERVAL_MS );			}		}		/**		 * Getter function for Kernel ID.		 * @return String The Kernel ID.		 */		public static function get KERNEL_ID( ):String		{			return __kernelID;		}		/**		 * Getter function for Kernel version.		 * @return String The Kernel version.		 */		public function get KERNEL_VERSION( ):String		{			return __kernelVersion;		}	}}