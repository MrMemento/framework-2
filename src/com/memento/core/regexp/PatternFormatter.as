/** * Copyright 2011 by Barnabás Bucsy * * This file is part of The Memento Framework. * * The Memento Framework is free software: you can redistribute it * and/or modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation, either * version 3 of the License, or (at your option) any later version. * * The Memento Framework is distributed in the hope that it will be * useful, but WITHOUT ANY WARRANTY; without even the implied warranty * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with The Memento Framework. If not, see * <http://www.gnu.org/licenses/>. */package com.memento.core.regexp{	/**	 * STATIC Class for formatting RegExp patterns.	 * @author Barnabás Bucsy (Lobo)	 */	public class PatternFormatter	{		//----------		// GROUPING		//----------		/**		 * Constant for RegExp character group start.		 */		public static const GROUP_START:String = '(';		/**		 * Constant for RegExp character group end.		 */		public static const GROUP_END:String = ')';		/**		 * Constant for RegExp character class start.		 */		public static const CLASS_START:String = '[';		/**		 * Constant for RegExp character class end.		 */		public static const CLASS_END:String = ']';		//-------------		// QUANTIFIING		//-------------		/**		 * Constant for RegExp multiple.		 */		public static const MULTIPLE:String = '+';		/**		 * Constant for RegExp any.		 */		public static const ANY:String = '*';		/**		 * Constant for RegExp or.		 */		public static const MAXIMUM_ONE:String = '?';		//-------		// LOGIC		//-------		/**		 * Constant for RegExp or.		 */		public static const OR:String = '|';		//----------		// POSITION		//----------		/**		 * Constant for matching the beginning.		 */		public static const STARTS:String = '^';		/**		 * Constant for matching the end.		 */		public static const ENDS:String = '$';		//-------------		// CONSTRUCTOR		//-------------		/**		 * Constructor		 * @throws Error Static Class.		 */		public function PatternFormatter( ):void		{			throw new Error( 'Tried to instantiate static class!' );		}		//----------		// POSITION		//----------		/**		 * Modifies expressiont that String must match it strictly.		 * @param expression_ String The expression to modify.		 * @return String The modified expression.		 */		public static function only( expression_:String ):String		{			return STARTS + expression_ + ENDS;		}		/**		 * Modifies expressiont that String must start with it.		 * @param expression_ String The expression to modify.		 * @return String The modified expression.		 */		public static function starts( expression_:String ):String		{			return STARTS + expression_;		}		/**		 * Modifies expressiont that String must end with it.		 * @param expression_ String The expression to modify.		 * @return String The modified expression.		 */		public static function ends( expression_:String ):String		{			return expression_ + ENDS;		}	}}