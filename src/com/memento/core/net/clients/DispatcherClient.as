/** * Copyright 2011 by Barnabás Bucsy * * This file is part of The Memento Framework. * * The Memento Framework is free software: you can redistribute it * and/or modify it under the terms of the GNU Lesser General Public * License as published by the Free Software Foundation, either * version 3 of the License, or (at your option) any later version. * * The Memento Framework is distributed in the hope that it will be * useful, but WITHOUT ANY WARRANTY; without even the implied warranty * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU * Lesser General Public License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with The Memento Framework. If not, see * <http://www.gnu.org/licenses/>. */package com.memento.core.net.clients{	import flash.utils.flash_proxy;	import com.memento.events.dispatchers.ProxyDispatcher;	import com.memento.events.CustomEvent;	/**	 * NetConnection or NetStream client. All called functions will be dispatched	 * as CustomEvents with arguments Object being the data.	 */	public dynamic class DispatcherClient extends ProxyDispatcher	{		/**		 * This way all unavailable function calls will be proxied to		 * EventDispatcher to be dispatched as CustomEvents.		 */		override flash_proxy function callProperty( name_:*, ...args_:Array ):*		{			if ( !hasOwnProperty( name_ ) || !( this[ name_ ] is Function ) )			{				dispatchEvent( new CustomEvent( name_, args_ ) );				return true;			}			else			{				this[ name_ ].apply( this, args_ );			}		}	}}